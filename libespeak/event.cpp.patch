--- src/event.cpp	2014-03-04 23:47:15.000000000 +0700
+++ src/event.cpp	2016-07-01 07:23:59.000000000 +0700
@@ -93,9 +93,9 @@
   pthread_mutex_init( &my_mutex, (const pthread_mutexattr_t *)NULL);
   init();

-  assert(-1 != sem_init(&my_sem_start_is_required, 0, 0));
-  assert(-1 != sem_init(&my_sem_stop_is_required, 0, 0));
-  assert(-1 != sem_init(&my_sem_stop_is_acknowledged, 0, 0));
+  //assert(-1 != sem_init(&my_sem_start_is_required, 0, 0));
+  //assert(-1 != sem_init(&my_sem_stop_is_required, 0, 0));
+  //assert(-1 != sem_init(&my_sem_stop_is_acknowledged, 0, 0));

   pthread_attr_t a_attrib;

@@ -406,18 +406,18 @@

 	add_time_in_ms( &ts, time_in_ms);

-	SHOW("polling_thread > sleep_until_timeout_or_stop_request > start sem_timedwait from %d.%09lu to %d.%09lu \n",
+	SHOW("polling_thread > sleep_until_timeout_or_stop_request > start sem_wait from %d.%09lu to %d.%09lu \n",
        to.tv_sec, to.tv_nsec,
        ts.tv_sec, ts.tv_nsec);

-	while ((err = sem_timedwait(&my_sem_stop_is_required, &ts)) == -1
+	while ((err = sem_wait(&my_sem_stop_is_required)) == -1
 		&& errno == EINTR)
 	{
 		continue; // Restart when interrupted by handler
 	}

 	assert (gettimeofday(&tv, NULL) != -1);
-	SHOW("polling_thread > sleep_until_timeout_or_stop_request > stop sem_timedwait %d.%09lu \n",
+	SHOW("polling_thread > sleep_until_timeout_or_stop_request > stop sem_wait %d.%09lu \n",
        tv.tv_sec, tv.tv_usec*1000);

 	if (err == 0)
